[{"question":" When a javaScript function is invoked (called) in Node, where is a new frame placed?","options":[{"text":"the call stack","correct":true},{"text":"the event loop","correct":false},{"text":"the poll phase","correct":false},{"text":"the events queue","correct":false}],"illustrator":""},{"question":" Which of the following is a core module in Node?","options":[{"text":"webpack","correct":false},{"text":"crypto","correct":true},{"text":"request","correct":false},{"text":"chalk","correct":false}],"illustrator":""},{"question":" Which of the following Buffer class methods returns an uninitialized buffer?","options":[{"text":"allocUnsafe","correct":true},{"text":"concat","correct":false},{"text":"from","correct":false},{"text":"alloc","correct":false}],"illustrator":""},{"question":" Which of the following modules is NOT a built-in module in Node?","options":[{"text":"ftp","correct":true},{"text":"events","correct":false},{"text":"dgram","correct":false},{"text":"http2","correct":false}],"illustrator":""},{"question":" Which fs module method can be used to read the content of a file without buffering it in memory?","options":[{"text":"read","correct":false},{"text":"readFile","correct":false},{"text":"createReadStream","correct":true},{"text":"readFileSync","correct":false}],"illustrator":""},{"question":" Which of the following DNS module methods uses the underlying OS facilities and does not necessarily perform any network communication?","options":[{"text":"lookup","correct":true},{"text":"resolve","correct":false},{"text":"resolve4","correct":false},{"text":"reverse","correct":false}],"illustrator":""},{"question":" How do you check that a value is a date object in Node?","options":[{"text":"util.types.isDate(value)","correct":true},{"text":"assert.isDate(value)","correct":false},{"text":"console.isDate(value)","correct":false},{"text":"util.date(value)","correct":false}],"illustrator":""},{"question":" Can you create an https web server with Node.js?","options":[{"text":"no, there are no modules supporting it yet","correct":false},{"text":"yes, with the https or http2 modules","correct":true},{"text":"yes, through the path module","correct":false},{"text":"yes, with the http module","correct":false}],"illustrator":""},{"question":" What is the Api that is designed to insulate Addons from changes in the underlying JavaScript engine?","options":[{"text":"A-API","correct":false},{"text":"Z-API","correct":false},{"text":"N-API","correct":true},{"text":"X-API","correct":false}],"illustrator":""},{"question":". Which CLI option can you use to debug a node script in Chrome DevTools?","options":[{"text":"--dev-tools","correct":false},{"text":"--inspect","correct":true},{"text":"--chrome","correct":false},{"text":"--debug","correct":false}],"illustrator":""},{"question":". How can you count the number of logical CPUs on the machine that is running Node?","options":[{"text":"node -p \"process.cpus\"","correct":false},{"text":"node -p \"util.cpus().size\"","correct":false},{"text":"node -p \"process.os.cpus\"","correct":false},{"text":"node -p \"os.cpus().length\"","correct":true}],"illustrator":""},{"question":". Which of the following is a method on the console object?","options":[{"text":"exit","correct":false},{"text":"test","correct":false},{"text":"time","correct":true},{"text":"print","correct":false}],"illustrator":""},{"question":". Which object is used to manage the cache of required modules?","options":[{"text":"global.cache","correct":false},{"text":"module.cache","correct":false},{"text":"process.cache","correct":false},{"text":"require.cache","correct":true}],"illustrator":""},{"question":". What is the command to silence all process warnings?","options":[{"text":"node index.js --trace-warnings","correct":false},{"text":"node --no-warnings","correct":true},{"text":"node -trace-warnings","correct":false},{"text":"node index.js --no-warnings","correct":false}],"illustrator":""},{"question":". How can you use the promise API with a callback-based function like child_process.exec?","options":[{"text":"new Promise(child_process.exec())","correct":false},{"text":"util.promisify(child_process.exec())","correct":false},{"text":"util.promisify(child_process.exec)","correct":true},{"text":"new Promise(child_process.exec)","correct":false}],"illustrator":""},{"question":". Which of the following is NOT a Node repl command?","options":[{"text":".brake","correct":false},{"text":".history","correct":true},{"text":".editor","correct":false},{"text":".save","correct":false}],"illustrator":""},{"question":". Which statement is true when you run the code shown below?","options":[{"text":"The forked process shares the event loop with the parent process","correct":false},{"text":"A new VM instance is created and the two VM instances will be shared between the forked process and the parent process.","correct":false},{"text":"The forked process will have its own VM instance.","correct":true},{"text":"The forked process shares the same VM thread with the parent process.","correct":false}],"illustrator":""},{"question":". If EventEmitter is in scope, which of the following lines of code will have an event emitter emitting a change event?","options":[{"text":"EventEmitter.emit('change');","correct":true},{"text":"EventEmitter.new().emit('change');","correct":false},{"text":"(new EventEmitter()).emit('change');","correct":false},{"text":"new EventEmitter('change');","correct":false}],"illustrator":""},{"question":". Which of the following objects is a stream","options":[{"text":"process.uptime","correct":false},{"text":"process.stdout","correct":true},{"text":"process","correct":false},{"text":"Buffer","correct":false}],"illustrator":""},{"question":". Which module variable holds the resolved aboslute path of the current module file?","options":[{"text":"\\_\\_pathname","correct":false},{"text":"\\_\\_location","correct":false},{"text":"\\_\\_flder","correct":false},{"text":"\\_\\_filename","correct":true}],"illustrator":""},{"question":" If the child_process module methods are in scope, what is a current way to execute the command ps -ef using a child process?","options":[{"text":"spawn(\"ps -ef\")","correct":false},{"text":"exec(\"ps -ef\")","correct":true},{"text":"exec(\"ps\", \"-ef\")","correct":false},{"text":"fork(\"ps -ef\")","correct":false}],"illustrator":""},{"question":".Which console method can be used to print the stack trace to the point of its execution?","options":[{"text":"stack","correct":false},{"text":"trace","correct":true},{"text":"debug","correct":false},{"text":"print","correct":false}],"illustrator":""},{"question":".When you run JavaScript in a Node.js application, which of the following elements in a Node.js stack actually executes that JavaScript?","options":[{"text":"the libuv library","correct":false},{"text":"the c-ares library","correct":false},{"text":"the VM (like VS or Chakra)","correct":true},{"text":"the repl module","correct":false}],"illustrator":""},{"question":". Looking at the code below, what does the console show?","options":[{"text":"server running at http://localhost:3000/","correct":false},{"text":"server running at port 3000","correct":false},{"text":"server running at http://localhost:4000/","correct":false},{"text":"server running at http://127.0.0.1:3000/","correct":true}],"illustrator":"```\nconst http = require('http');\n const hostname = '127.0.0.1'; const port = 3000;\n const server = http.createServer((req, res) => {\n  res.statusCode = 200;  res.setHeader(\"Content-Type\", \"text/plain\");  res.end(\"Hello World\\n\");\n});\nserver.listen(port, hostname, () => { console.log(`server running at http://${hostname}:${port}/`); });\n```"},{"question":".What is the purpose of the path module?","options":[{"text":"to provide utilities to play with file and directory paths","correct":true},{"text":"to provide utilities to add and remove files","correct":false},{"text":"It is a retiring module.","correct":false},{"text":"to provide utilities to test files","correct":false}],"illustrator":""},{"question":".How do you make an HTTP server object active and listen to requests on certain ports?","options":[{"text":"server. start","correct":false},{"text":"server.activate","correct":false},{"text":"server.listen","correct":true},{"text":"server. run","correct":false}],"illustrator":""},{"question":".What does the code shown below do?","options":[{"text":"creates a text file hello.txt and appends customized text","correct":true},{"text":"creates an image file","correct":false},{"text":"console logs system information","correct":false},{"text":"creates a file named data and append numbers","correct":false}],"illustrator":"```\nconst fs = require('fs'); const os = require('os');\nconst system = os.platform(); const user = os.userInfo().username;\nfs.appendFile('hello.txt', `Hello ${user} on ${system}`, (err) => { if (err) throw err; console.log('The data was appended to file!');}\n);\n```"},{"question":".How do you start a Node application, if the entry file is indexjs?","options":[{"text":"nodemon start","correct":false},{"text":"start index.js","correct":false},{"text":"node index.js","correct":true},{"text":"node start","correct":false}],"illustrator":""},{"question":".What is the purpose of the file system (fs) module?","options":[{"text":"to provide methods to work with requests and responses","correct":false},{"text":"to provide methods to work with files","correct":true},{"text":"to provide methods to work with databases","correct":false},{"text":"to find new file systems","correct":false}],"illustrator":""},{"question":".What is the Node LTS version?","options":[{"text":"It is the current unstable version and is to be avoided.","correct":false},{"text":"It is the version that will be retired soon.","correct":false},{"text":"It is the version with the latest features.","correct":false},{"text":"It is the safest version for long-term support.","correct":true}],"illustrator":""},{"question":". Which of the following is NOT a valid stream in Node?","options":[{"text":"process. stdinfo","correct":true},{"text":"process. stdin","correct":false},{"text":"process. stdout","correct":false},{"text":"process. stderr","correct":false}],"illustrator":""},{"question":". You have a script.js file with the single line of code shown here. What will be the output of executing script.js with the node command?","options":[{"text":"ReferenceError: arguments is not defined","correct":false},{"text":"an empty string","correct":false},{"text":"undefined","correct":false},{"text":"an object representing an array that has five elements","correct":true},{"text":"start","correct":true},{"text":"on","correct":false},{"text":"once","correct":false},{"text":"off","correct":false},{"text":"process","correct":false},{"text":"Buffer","correct":false},{"text":"root","correct":false},{"text":"require","correct":true},{"text":"node index.js -x","correct":false},{"text":"node -v","correct":false},{"text":"node -h","correct":true},{"text":"node index.js -h","correct":false},{"text":"http.IncomingMessage","correct":true},{"text":"http.ServerRequest","correct":false},{"text":"http.ClientRequest","correct":false},{"text":"http.ServerResponse","correct":false},{"text":"exports, **filename, **dirname","correct":false},{"text":"exports, process, require, module, **filename, **dirname","correct":false},{"text":"exports, module, **filename, **dirname","correct":false},{"text":"exports, require, module, **filename, **dirname","correct":true},{"text":"V8","correct":false},{"text":"c-ares","correct":false},{"text":"libuv","correct":true},{"text":"events","correct":false},{"text":"a C++ file that can have a .node extension and that Node will be able to execute directly.","correct":false},{"text":"a C++ Addon file that is built with node-gyp","correct":true},{"text":"a JSON file that can have a .node extension as well as the .json extension","correct":false},{"text":"a JavaScript file that can have a .node extension as well as the .js extension","correct":false},{"text":"only objects.","correct":false},{"text":"only functions","correct":false},{"text":"only variables and arrays","correct":false},{"text":"functions, objects, arrays, or anything you assign to the module","correct":true},{"text":"os","correct":false},{"text":"util","correct":false},{"text":"cluster","correct":true},{"text":"net","correct":false},{"text":"SSL","correct":false},{"text":"hash","correct":false},{"text":"crypto","correct":true},{"text":"TLS","correct":false},{"text":"const { readFile } = require(fs).promises","correct":true},{"text":"const { readFile } = require(fs)","correct":false},{"text":"const { readFilePromises: readFile } = require(fs)","correct":false},{"text":"const { readFile } = require(promises)","correct":false},{"text":"Changes are not backwards compatible.","correct":false},{"text":"Changes might not be backward compatible and might break existing code.","correct":false},{"text":"Changes are just bug fixes and no new features were added.","correct":true},{"text":"Changes will add new functionality but will not break any existing code.","correct":false},{"text":"run, examine, put, loop","correct":false},{"text":"read, eval, print, loop","correct":true},{"text":"run, edit, print, loop","correct":false},{"text":"read, extend, print, loop","correct":false},{"text":".gyprc","correct":false},{"text":"binding.gyp","correct":true},{"text":"gyp.json","correct":false},{"text":"package.gyp","correct":false},{"text":"chai","correct":false},{"text":"jest","correct":false},{"text":"assert","correct":true},{"text":"mocha","correct":false}],"illustrator":""}]